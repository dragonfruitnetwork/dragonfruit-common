using System;
using System.Text;
using System.Net.Http;
using DragonFruit.Data;
using DragonFruit.Data.Requests;

namespace {{ namespace }}
{
    partial class {{ class_name }} : global::DragonFruit.Data.Requests.IRequestBuilder
    {
        public global::System.Net.Http.HttpRequestMessage BuildRequest()
        {
            global::System.UriBuilder uriBuilder = new global::System.UriBuilder(RequestPath);
            global::System.Text.StringBuilder queryBuilder = new global::System.Text.StringBuilder();
            
            {%- for query in query_parameters -%}
                {% capture query_append %}
                    {% case query.type %}
                        {% when 1 %}
                            global::DragonFruit.Data.Requests.EnumerableConverter.AppendEnumerable(queryBuilder, {{ query.accessor }}, global::DragonFruit.Data.Requests.EnumerableOption.{{ query.enum_option }}, "{{ query.parameter_name }}", "{{ query.separator }}");
                        {% when 2 %}
                            global::DragonFruit.Data.Requests.EnumConverter.AppendEnum(queryBuilder, {{ query.accessor }}, global::DragonFruit.Data.Requests.EnumOption.{{ query.enumerable_option }}, "{{ query.parameter_name }}");
                        {% else %}
                            builder.AppendFormat("{0}={1}&", "{{ query.parameter_name }}", global::System.Uri.EscapeDataString({{ query.accessor }}.ToString());
                    {% endcase %}
                {% endcapture %}

                {% if query.nullable %}
                    if ({{ query.accessor }} != null)
                    {
                        {{ query_append }}
                    }
                {% else %}
                    {{ query_append }}
                {% endif %}
            {% endfor -%}

            if (queryBuilder.Length > 0)
            {
                queryBuilder.Length--; // remove trailing &
                uriBuilder.Query = queryBuilder.ToString();
            }

            global::System.Net.Http.HttpRequestMessage request = new global::System.Net.Http.HttpRequestMessage(this.RequestMethod, uriBuilder.Uri);

            {%- for header in header_parameters -%}
                {% capture header_append %}
                    {% case header.type %}
                        {% when 1 %}
                            foreach (var kvp in global::DragonFruit.Data.Requests.EnumerableConverter.GetPairs({{ header.accessor }}, global::DragonFruit.Data.Requests.EnumerableOption.{{ header.enumumerable_option }}))
                            {
                                request.Headers.Add(kvp.Key, kvp.Value);
                            }
                        {% when 2 %}
                            request.Headers.Add("{{ header.parameter_name }}", global::DragonFruit.Data.Requests.EnumConverter.GetString({{ header.accessor }}, global::DragonFruit.Data.Requests.EnumOption.{{ header.enum_option }}));
                        {% else %}
                            request.Headers.Add("{{ header.parameter_name }}", {{ header.accessor }}.ToString());
                    {% endcase %}
                {% endcapture %}
                
                {% if header.nullable %}
                    if ({{ header.accessor }} != null)
                    {
                        {{ header_append }}
                    }
                {% else %}
                    {{ header_append }}
                {% endif %}
            {% endfor -%}

            return request;
        }
    }
}
